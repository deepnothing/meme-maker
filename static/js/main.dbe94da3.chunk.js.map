{"version":3,"sources":["App.js","index.js"],"names":["randomnumber","Math","floor","random","randomnumber2","App","props","handleInput","event","setState","value","target","changeColorToBlack","textcolor","changeColorToWhite","sizeSmall","size","sizeMedium","sizeLarge","goForward","photos","state","allData","data","memes","url","goBack","saveImage","domtoimage","toBlob","document","getElementById","then","blob","window","saveAs","fetch","response","ok","Error","json","catch","err","message","console","log","className","Button","variant","id","onClick","this","type","placeholder","onChange","style","fontSize","color","height","width","src","Component","ReactDOM","render","StrictMode"],"mappings":"6PASIA,G,MAAeC,KAAKC,MAAsB,IAAhBD,KAAKE,WAE/BC,EAAgBH,KAAKC,MAAsB,IAAhBD,KAAKE,UAIfE,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAcRC,YAAc,SAACC,GACb,EAAKC,SAAS,CAAEC,MAAOF,EAAMG,OAAOD,SAhBnB,EAuBnBE,mBAAqB,WACnB,EAAKH,SAAS,CAAEI,UAAW,WAxBV,EA2BnBC,mBAAqB,WACnB,EAAKL,SAAS,CAAEI,UAAW,WA5BV,EA+BnBE,UAAY,WACV,EAAKN,SAAS,CAAEO,KAAM,UAhCL,EAmCnBC,WAAa,WACX,EAAKR,SAAS,CAAEO,KAAM,UApCL,EAsCnBE,UAAY,WACV,EAAKT,SAAS,CAAEO,KAAM,UAvCL,EAsEnBG,UAAY,YAEVf,GAAiB,GAEG,KAClBA,EAAgB,GAKlB,EAAKK,SAAS,CAAEW,OAAQ,EAAKC,MAAMC,QAAQC,KAAKC,MAAMpB,GAAeqB,OAhFpD,EAqFnBC,OAAS,YACPtB,GAAiB,GAEG,IAClBA,EAAgB,IAKlB,EAAKK,SAAS,CAAEW,OAAQ,EAAKC,MAAMC,QAAQC,KAAKC,MAAMpB,GAAeqB,OA9FpD,EAmGnBE,UAAY,WAEVC,IAAWC,OAAOC,SAASC,eAAe,YACvCC,MAAK,SAAUC,GACdC,OAAOC,OAAOF,EAAM,mBArGxB,EAAKZ,MAAQ,CACXD,OAAQ,GACRE,QAAS,GACTZ,MAAO,GACPG,UAAW,QACXG,KAAM,IAPS,E,gEA2CE,IAAD,OAIlBoB,MAAM,qCAEHJ,MAAK,SAAAK,GACJ,IAAKA,EAASC,GACZ,MAAMC,MAAM,mBAGd,OAAOF,EAASG,OACbR,MAAK,SAAAK,GACJ,EAAK5B,SAAS,CAAEW,OAAQiB,EAASd,KAAKC,MAAMxB,GAAcyB,IAAKH,QAASe,OAIzEI,OAAM,SAAAC,GACL,MAAMH,MAAMG,EAAIC,iB,+BAqDxB,OAFAC,QAAQC,IAAIzC,GAIV,sBAAK0C,UAAU,UAAf,UAEE,qBAAKA,UAAU,YAAf,SACE,gCACE,sBAAKA,UAAU,YAAf,UAEE,cAACC,EAAA,EAAD,CAAQC,QAAQ,OAAOC,GAAG,WAAWC,QAASC,KAAKvC,mBAAnD,mBACA,cAACmC,EAAA,EAAD,CAAQC,QAAQ,QAAQC,GAAG,WAAWH,UAAU,QAAQI,QAASC,KAAKrC,mBAAtE,mBACA,cAACiC,EAAA,EAAD,CAAQC,QAAQ,YAAYhC,KAAK,KAAKiC,GAAG,WAAWC,QAASC,KAAKpC,UAAlE,mBACA,cAACgC,EAAA,EAAD,CAAQC,QAAQ,YAAYhC,KAAK,KAAKiC,GAAG,WAAWC,QAASC,KAAKlC,WAAlE,oBACA,cAAC8B,EAAA,EAAD,CAAQC,QAAQ,YAAYhC,KAAK,KAAKiC,GAAG,WAAWC,QAASC,KAAKjC,UAAlE,oBACA,2BAIF,0BAAU+B,GAAG,UAAUG,KAAK,OAAOC,YAAY,uCAAuCC,SAAUH,KAAK5C,mBAMzG,qBAAK0C,GAAG,WAER,sBAAKH,UAAU,iBAAf,UACE,qBAAKG,GAAG,WAER,qBAAKM,MAAO,CAAEC,SAAU,QAAxB,mCAGA,sBAAKP,GAAG,UAAR,UAEE,cAAC,IAAD,UACE,qBAAKA,GAAG,QAAQM,MAAO,CAAEE,MAAON,KAAK9B,MAAMR,UAAW2C,SAAUL,KAAK9B,MAAML,MAA3E,SAAoFmC,KAAK9B,MAAMX,UAKjG,qBAAK6C,MAAO,CAAEG,OAAQ,QAASC,MAAO,SAAWC,IAAKT,KAAK9B,MAAMD,YAGnE,cAAC2B,EAAA,EAAD,CAAQC,QAAQ,SAASF,UAAU,aAAaI,QAASC,KAAKzB,OAA9D,uBAMA,cAACqB,EAAA,EAAD,CAAQC,QAAQ,UAAUF,UAAU,gBAAgBI,QAASC,KAAKhC,UAAlE,sBAGF,qBAAK8B,GAAG,WAER,cAACF,EAAA,EAAD,CAAQC,QAAQ,UAAUC,GAAG,MAAMC,QAASC,KAAKxB,UAAjD,6B,GAxKyBkC,aCVjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFlC,SAASC,eAAe,W","file":"static/js/main.dbe94da3.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Draggable from 'react-draggable';\nimport Button from 'react-bootstrap/Button'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport domtoimage from 'dom-to-image';\nimport { saveAs } from 'file-saver';\n\n\nlet randomnumber = Math.floor(Math.random() * 100);\n\nlet randomnumber2 = Math.floor(Math.random() * 100);\n\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      photos: '',\n      allData: '',\n      value: '',\n      textcolor: 'black',\n      size: ''\n\n    }\n\n\n  }\n\n\n  handleInput = (event) => {\n    this.setState({ value: event.target.value });\n\n\n  };\n\n\n\n  changeColorToBlack = () => {\n    this.setState({ textcolor: 'black' })\n  };\n\n  changeColorToWhite = () => {\n    this.setState({ textcolor: 'white' })\n  };\n\n  sizeSmall = () => {\n    this.setState({ size: '20px' })\n\n  };\n  sizeMedium = () => {\n    this.setState({ size: '40px' })\n  };\n  sizeLarge = () => {\n    this.setState({ size: '80px' })\n  };\n\n\n  componentDidMount() {\n\n\n\n    fetch(\"https://api.imgflip.com/get_memes\")\n\n      .then(response => {\n        if (!response.ok) {\n          throw Error(\"ERROR FETCHING \");\n        }\n\n        return response.json()\n          .then(response => {\n            this.setState({ photos: response.data.memes[randomnumber].url, allData: response })\n\n\n          })\n          .catch(err => {\n            throw Error(err.message)\n          });\n      }\n      );\n\n\n\n  }\n\n  goForward = () => {\n\n    randomnumber2 += 1\n\n    if (randomnumber2 > 99) {\n      randomnumber2 = 0\n\n    }\n\n\n    this.setState({ photos: this.state.allData.data.memes[randomnumber2].url })\n\n\n  };\n\n  goBack = () => {\n    randomnumber2 -= 1\n\n    if (randomnumber2 < 0) {\n      randomnumber2 = 99\n\n    }\n\n\n    this.setState({ photos: this.state.allData.data.memes[randomnumber2].url })\n\n  };\n\n\n  saveImage = () => {\n\n    domtoimage.toBlob(document.getElementById('my-node'))\n      .then(function (blob) {\n        window.saveAs(blob, 'my-node.png');\n      });\n  }\n\n\n\n  render() {\n\n\n    console.log(randomnumber2)\n\n    return (\n\n      <div className=\"wrapper\">\n\n        <div className=\"textinput\">\n          <div >\n            <div className=\"buttonbox\">\n\n              <Button variant=\"dark\" id=\"btnfloat\" onClick={this.changeColorToBlack}>black</Button>\n              <Button variant=\"light\" id=\"btnfloat\" className=\"whyte\" onClick={this.changeColorToWhite}>white</Button>\n              <Button variant=\"secondary\" size=\"sm\" id=\"btnfloat\" onClick={this.sizeSmall}>small</Button>\n              <Button variant=\"secondary\" size=\"md\" id=\"btnfloat\" onClick={this.sizeMedium}>medium</Button>\n              <Button variant=\"secondary\" size=\"lg\" id=\"btnfloat\" onClick={this.sizeLarge}> large</Button>\n              <div></div>\n            </div>\n\n\n            <textarea id=\"textbar\" type=\"text\" placeholder=\"TEXT + SPACING HERE APPEARS ON IMAGE\" onChange={this.handleInput} />\n          </div>\n\n\n        </div>\n\n        <div id=\"spacer\"></div>\n\n        <div className=\"imagecontainer\" >\n          <div id=\"spacer\"></div>\n\n          <div style={{ fontSize: '25px' }}>DRAG TEXT TO POSITION</div>\n\n\n          <div id=\"my-node\">\n\n            <Draggable>\n              <div id=\"text1\" style={{ color: this.state.textcolor, fontSize: this.state.size }}>{this.state.value}</div>\n            </Draggable>\n\n\n\n            <img style={{ height: '400px', width: '400px' }} src={this.state.photos} />\n\n          </div>\n          <Button variant=\"danger\" className=\"backbutton\" onClick={this.goBack}> PREVIOUS</Button>\n\n\n\n\n\n          <Button variant=\"success\" className=\"forwardbutton\" onClick={this.goForward}> NEXT</Button>\n\n        </div>\n        <div id=\"spacer\"></div>\n\n        <Button variant=\"warning\" id=\"foo\" onClick={this.saveImage}>DOWNLOAD</Button>\n      </div >\n\n    )\n\n\n  }\n}\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}